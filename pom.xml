Animal Universe API
Rebeca Carrillo

Animal Universe
<!-------- Organization of groups/modules --->
<API>
Animal services
Action services


<Objects>
Animal // name, group,and specifiers
Animals // JSONobject
AnimalActionsKey // json_array in JSONObject
Actions // methods  (kill = delete) (birth = new entity in db) (sound = execute soundvalue)
AnimalActionItem // item in aak

<Flows>  
Create new animal (Birth flow)
Delete existing animal (Kill flow)
Execute sound for animal (sound flow)>

<!---Dependencies--->

<!-- JSON doc for documentation -->
<dependencies>
	<dependency>
        <groupId>org.jsondoc</groupId>
        <artifactId>jsondoc-ui</artifactId>
        <version>1.1.13</version>
</dependency>

<!--------API--->
<animalervices>

@Api(name = "animal services", description = "Methods for managing animals", group = 
public class AnimalApi {
	// 
}
<getAnimalByNameMethod>


}

@APIMethod( 
	path = "animal/get{name}";
	description= "Gets an animal with the given name provided the name is in ("COW" "BIRD" "FISH" "PTERODACTYL" "WHALE")

	public@ApiResponseObject Animal 
	getAnimalByName(@ Api path param (name = "name", description="the animal name") to.String name){//...}


to do: Action Services 


<!-------Objects-->
Animal // name, group,and specifiers
Animals // JSONobject
AnimalActionsKey // json_array in JSONObject
Actions // methods  (kill = delete) (birth = new entity in db) (sound = execute soundvalue)
AnimalActionItem // item in AnimalActionsKey

<!----Flows-->

Create new animal (Birth flow)
Delete existing animal (Kill flow)
Execute sound for animal (sound flow)

<!----Sound Flow-->
<dependencies>
	<dependency>
        <groupId>org.jsondoc</groupId>
        <artifactId>jsondoc-ui</artifactId>
        <version>1.1.13</version>
</dependency>

public class SoundFlows {
	
@ApiFlowSet
public class SoundFlows {
	
	@ApiFlow(
		name = "sound action flow",
		description = "The flow for executing an animal sound action on animal",
		preconditions = {
				"the animal name must be part of the animal group",
				"the sound action must exist in all available actions for sound"
				"the method must match the animal type's action type, ex. a Kill action
				for a Cow is "SLAUGHTER COW",
			
		},
		steps = {
			@ApiFlowStep(apimethodid = FlowConstants.SOUND_METHOD_ID), // get
			@ApiFlowStep(apimethodid = FlowConstants.ANIMAL_ACTION_METHOD_ID), 
			@ApiFlowStep(apimethodid = FlowConstants.SOUND_ACTION_VALIDATE_METHOD_ID,
			@ApiFlowStep(apimethodid = FlowConstants.SOUND_ACTION_METHOD_ID)
		})
	public void soundFlow() {
		
	}
	
@APIMethod(
		path = "animals"/"animalnames/{name}
		description = "Gets an animal with given name"
		produces { MediaType.APPLICATION_JSON_VALUE }, 
		consumes = { MediaType.APPLICATION_JSON_VALUE 
		responsestatuscode = "201 - Created"}
	)
 
public @ApiResponseObject Animal getAnimalByName(@ApiParam(name="name", description="The animal name", allowedvalues= { "COW" "BIRD" "FISH" "PTERODACTYL" "WHALE")}) String name){
        // ...
        
   }
	)
 